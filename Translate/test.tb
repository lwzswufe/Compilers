//------------------------------------------------------------------------
// 简称: bianyu_S
// 名称: 扁鱼单边做空(止损带开关）
// 类别: 公式应用
// 类型: 用户应用
// 输出:
//------------------------------------------------------------------------




Params

	Numeric PercentOfRange(0);
	Numeric length(36);
	Numeric length1(90);
	Numeric minpointmulty(0);
	Numeric entertime(9.33);
	Numeric EntrylastTime(13);
	Numeric myExitTime(14.35);
	Numeric MinRange(0);
	Numeric MaxRange(0);
	Numeric ratio(1.80);
	Numeric ratio1(0.50);
	Numeric lots(1);
	Numeric addnumber(6);
	Numeric zhiyinZ(1);
	Numeric zhisunZ(1);
	Numeric zhiyinF(1);
	Numeric zhisunF(1);
	Numeric zhiyinZ1(0);
	Numeric zhisunZ1(0);
	Numeric zhiyinF1(0);
	Numeric zhisunF1(1);
    Numeric chazhi(53);
    Numeric PercentDay(0.07);
Vars
	
	NumericSeries Price;
	NumericSeries preDayHL;
	Numeric preDayHigh;
	Numeric preDayLow;
	NumericSeries UpperBand;
	NumericSeries MidLine;
	NumericSeries MidLine1;
	NumericSeries flag(0);
	Numeric MinPoint;
	NumericSeries MyExitPrice;
	NumericSeries HigherAfterEntry;
    NumericSeries LowerAfterEntry;
	NumericSeries HigherAfterlongEntry;
    NumericSeries LowerAftershortEntry;
	NumericSeries buynumber;
	NumericSeries sellnumber;
	NumericSeries selltime;
	NumericSeries buydate;
	NumericSeries sellstate;
	
Begin

	MinPoint = MinMove*PriceScale;
	MidLine = AverageFC(Close[1],Length);
	MidLine1 = AverageFC(Close[1],Length1);
	PlotNumeric("MidLine",MidLine);
	PlotNumeric("MidLine1",MidLine1);
	If(TrueDate(0)!=TrueDate(1))
	{
		Price=IntPart(Open);
		Commentary("Price="+Text(Price));
	}
	If(TrueDate(0)!=TrueDate(1))				
    {
	    HigherAfterEntry = High;
    	LowerAfterEntry = Low;
		buynumber=0;
		sellnumber=0;
		selltime=0;
		MyExitPrice=InvalidNumeric;
		selltime=InvalidNumeric;
    }Else
    {
		HigherAfterEntry = max(HigherAfterEntry[1],High[1]);
        LowerAfterEntry = min(LowerAfterEntry[1],Low[1]);
	}
	If(BarsSinceEntry==1)				
    {
	    HigherAfterlongEntry = High;
    	LowerAftershortEntry = Low;
    }Else If(BarsSinceEntry>1)
    {
		HigherAfterlongEntry = max(HigherAfterlongEntry[1],High[1]);
        LowerAftershortEntry = min(LowerAftershortEntry[1],Low[1]);
	}
	Else 
	{
	LowerAftershortEntry=InvalidNumeric;
	
	}
	Commentary("flag="+Text(flag));
	//Commentary("HigherAfterEntry="+Text(HigherAfterEntry));
	//Commentary("LowerAfterEntry="+Text(LowerAfterEntry));
	//Commentary("HigherAfterlongEntry="+Text(HigherAfterlongEntry));
	//Commentary("LowerAftershortEntry="+Text(LowerAftershortEntry));
	//Commentary("buynumber="+Text(buynumber));
	Commentary("sellnumber="+Text(sellnumber));
	
	
	preDayHigh=HighD(1);
	preDayLow=LowD(1);
	preDayHL=HighD(1)-LowD(1);
	
	If(TrueDate(0)!=TrueDate(1))
	{
		If(MidLine<Price)
		{
			UpperBand=Price+IntPart(preDayHL*PercentOfRange);
			If(IntPart(preDayHL*PercentOfRange) < Open*MinRange*0.01)
				UpperBand=Price+Open*MinRange*0.01;
			If(IntPart(preDayHL*PercentOfRange) > Open*MaxRange*0.01)
				UpperBand=Price+Open*MaxRange*0.01;
			flag=1;
		}Else
		{
			UpperBand=Price-IntPart(preDayHL*PercentOfRange);
			If(IntPart(preDayHL*PercentOfRange) < Open*MinRange*0.01)
				UpperBand=Price-Open*MinRange*0.01;
			If(IntPart(preDayHL*PercentOfRange) > Open*MaxRange*0.01)
				UpperBand=Price-Open*MaxRange*0.01;
				flag=-1;
		}
	}
	
	PlotNumeric("UpperBand",UpperBand);
	PlotNumeric("Price",Price);
	PlotNumeric("MyExitPrice",MyExitPrice);
	
	If(MarketPosition==0 And Time<EntrylastTime/100 And Time>entertime/100  And sellnumber <1)
	{		
		If(Low<min(min(UpperBand,Price),MidLine)  And Low<LowerAfterEntry  )
		{
			MyExitPrice=min(min(min(UpperBand,Price),MidLine),LowerAfterEntry);
			
			selltime=Time;
				
		} 
		If(High > MyExitPrice+addnumber And time>selltime+0.0001 And MyExitPrice+addnumber<price):
		{
		    SellShort(lots,MyExitPrice+addnumber);
			sellnumber=sellnumber+1;
			buydate=TrueDate;
		 }
		 If(High > MyExitPrice+addnumber  And time>selltime+0.0001 And MyExitPrice+addnumber>=price):
		{
		   
			sellnumber=sellnumber+1;
		 }
	}
	
	
				
	
	If(MarketPosition==-1 And buydate==TrueDate And Time>entertime/100 And (HigherAfterEntry-LowerAfterEntry)*10 > PercentDay*price  )
	{
	    
		If(flag==1)
		{
			If(High>LowerAftershortEntry*(1+ratio/100) And zhiyinZ>0)
			{
				MyExitPrice=LowerAftershortEntry*(1+ratio/100)+MinPoint*minpointmulty;
				BuyToCover(0,MyExitPrice);
				buydate=InvalidNumeric;
			}
			If(High>Price And High>MidLine And High-MyExitPrice[1]>chazhi  And zhisunZ>0)
			{
				MyExitPrice=Close+MinPoint*minpointmulty;
				//报单价格有问题
				BuyToCover(0,MyExitPrice);
			    buydate=InvalidNumeric;		
			} 
			
		}Else
		{
			If(High>LowerAftershortEntry*(1+ratio/100) And zhiyinF>0 )
			{
				MyExitPrice=LowerAftershortEntry*(1+ratio/100)+MinPoint*minpointmulty;
				BuyToCover(0,MyExitPrice);
				buydate=InvalidNumeric;
			}
			If(High>Max(UpperBand,Price)  And zhisunF>0)
			{
				MyExitPrice=Close+MinPoint*minpointmulty;
				BuyToCover(0,MyExitPrice);
				buydate=InvalidNumeric;	
			}
		}
	}
	If(MarketPosition==-1 And buydate<TrueDate )
	{
	    If( PositionProfit<0)
	{
		BuyToCover(0,Close+MinPoint*minpointmulty);
	}

		If(flag==1)
		{
			If(High>LowerAfterEntry*(1+ratio1/100) And zhiyinZ1>0 )
			{
				MyExitPrice=LowerAfterEntry*(1+ratio1/100)+MinPoint*minpointmulty;
				BuyToCover(0,MyExitPrice);
				buydate=InvalidNumeric;
			}
			If(High>Price And High>MidLine1  And zhisunZ1>0)
			{
				MyExitPrice=Max(Price,MidLine1)+MinPoint*minpointmulty;
				BuyToCover(0,MyExitPrice);
				buydate=InvalidNumeric;
			} 
			
		}Else
		{
			If(High>LowerAfterEntry*(1+ratio1/100)  And zhiyinF1>0)
			{
				//MyExitPrice=LowerAfterEntry*(1+ratio1/100)+MinPoint*minpointmulty;
				//BuyToCover(0,MyExitPrice);
				//buydate=InvalidNumeric;
			}
			
			If(High>MidLine1  And zhisunF1>0)
			{
			    MyExitPrice=close+MinPoint*minpointmulty;
				BuyToCover(0,MyExitPrice);
				Commentary ("隔夜卖出");
				buydate=InvalidNumeric;
				
			
			}
		}
	}
	
	
	
	Commentary("MyExitPrice="+Text(MyExitPrice));
	Commentary("selltime="+Text(selltime));
	Commentary("buydate="+Text(buydate));
	Commentary("TrueDate="+Text(TrueDate));
	If(Time==myExitTime/100 And PositionProfit<0)
	{
		
		BuyToCover(0,Close+MinPoint*minpointmulty);
	}
	If(Time==14.59/100 And PositionProfit<0)
	{
		BuyToCover(0,Close+MinPoint*minpointmulty);
	}
End



//------------------------------------------------------------------------
// 编译版本	GS2015.12.25
// 用户版本	2019/03/01 11:45:45
// 版权所有	sywgqhcd
// 更改声明	TradeBlazer Software保留对TradeBlazer平台
//			每一版本的TradeBlazer公式修改和重写的权利
//------------------------------------------------------------------------